{"version":3,"sources":["app/components/common/Announce.js","app/helpers/helpers.js","app/components/common/Password.js","app/components/common/Username.js","app/components/views/Login.js","app/components/views/View.js","app/components/Routes.js","app/components/ui/Header.js","app/components/App.js","reportWebVitals.js","index.js"],"names":["Announce","role","className","aria-live","aria-relevant","aria-atomic","id","announce","text","mode","liveRegion","document","getElementById","innerText","Password","handleBlur","validate","console","log","props","errors","length","join","state","touched","input","React","createRef","callback","parent","this","passwordErrors","value","push","uppercase","match","lowercase","number","getPasswordErrors","current","setState","label","helpText","hideLabel","update","htmlFor","ref","name","required","aria-invalid","aria-required","type","aria-describedby","onFocus","onBlur","onChange","Component","Username","error","usernameError","Login","complete","renderError","validateForm","username","password","loginError","getLoginError","handleSubmit","e","preventDefault","submitted","login","onSubmit","noValidate","View","view","title","tabIndex","aria-labelledby","renderView","Routes","path","Header","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"+KAiCeA,MA1Bd,WAEC,OACE,gCACE,qBACEC,KAAK,MACLC,UAAU,kBACVC,YAAU,YACVC,gBAAc,YACdC,cAAY,SAId,qBACEC,GAAG,kBACHL,KAAK,MACLC,UAAU,kBACVC,YAAU,SACVC,gBAAc,YACdC,cAAY,a,qDC4Bb,SAASE,EAASC,EAAMC,GAC7B,IAAIC,EAES,cAATD,EACFC,EAAaC,SAASC,eAAe,sBACnB,WAATH,IACTC,EAAaC,SAASC,eAAe,oBAInCF,GAAcA,EAAWG,YAAcL,IACzCE,EAAWG,UAAYL,G,ICmCZM,E,kDAjFb,aAAe,IAAD,8BACZ,gBAuBFC,WAAa,WAUX,EAAKC,UATY,YACfC,QAAQC,IAAI,EAAKC,MAAMC,OAAOC,QAC1B,EAAKF,MAAMC,OAAOC,QAEpBd,EADU,0BAAsB,EAAKY,MAAMC,OAAOE,KAAK,OACxC,UAEff,EAAS,GAAI,cA5BjB,EAAKgB,MAAQ,CACXC,SAAS,GAGX,EAAKC,MAAQC,IAAMC,YAPP,E,4CAUd,SAASC,GAAW,IACVC,EAAWC,KAAKX,MAAhBU,OAGFE,ED3BH,SAA2BC,GAChC,IAAMZ,EAAS,GAEf,GAAc,KAAVY,EAGF,OAFAZ,EAAOa,KAAK,0BAELb,EAIT,IAAMc,EAAYF,EAAMG,MAAM,UACxBC,EAAYJ,EAAMG,MAAM,UACxBE,EAASL,EAAMG,MAAM,UAiB3B,OAdKD,GACHd,EAAOa,KAAK,4BAITG,GACHhB,EAAOa,KAAK,4BAITI,GACHjB,EAAOa,KAAK,yBAGPb,ECFkBkB,CAFTR,KAAKL,MAAMc,QAAQP,OAGjCH,EAAOW,SAAS,CACdT,mBACC,WACGH,GACFA,S,oBAkBN,WAAU,IAAD,SAC+DE,KAAKX,MAAnEb,EADD,EACCA,GAAIJ,EADL,EACKA,UAAWkB,EADhB,EACgBA,OAAQqB,EADxB,EACwBA,MAAOC,EAD/B,EAC+BA,SAAUC,EADzC,EACyCA,UAAWC,EADpD,EACoDA,OAE3D,OACE,sBAAK1C,UAAU,WAAf,UACE,uBACEI,GAAE,UAAKA,EAAL,QACFJ,UAAS,gCACPyC,EAAY,kBAAoB,UADzB,YAELzC,GAAwB,IAC5B2C,QAASvC,EALX,SAOGmC,IAEH,uBACEnC,GAAIA,EACJwC,IAAKhB,KAAKL,MACVvB,UAAU,wBACV6C,KAAMzC,EACN0C,UAAQ,EACRC,eAAc7B,EAAOC,OAAS,EAAI,OAAS,QAC3C6B,gBAAc,OACdC,KAAK,WACLC,mBAAA,UAAqB9C,EAArB,SACA+C,QAAS,WACP,EAAKb,SAAS,CAAEhB,SAAS,KAE3B8B,OAAQxB,KAAKf,WACbwC,SAAU,kBAAMX,EAAOtC,EAAI,EAAKmB,MAAMc,QAAQP,UAE/CZ,EAAOC,OAAS,GACf,+CAAgBD,EAAOE,KAAK,SAG9B,qBAAKpB,UAAU,OAAf,SACE,mBAAGI,GAAE,UAAKA,EAAL,SAAgBJ,UAAU,gBAA/B,SACGwC,a,GA1EUhB,IAAM8B,W,QC+EdC,E,kDA/Eb,aAAe,IAAD,8BACZ,gBAsBF1C,WAAa,WAQX,EAAKC,UAPY,WACX,EAAKG,MAAMuC,MACbnD,EAAS,6BAA8B,UAEvCA,EAAS,GAAI,cAzBjB,EAAKgB,MAAQ,CACXC,SAAS,GAGX,EAAKC,MAAQC,IAAMC,YAPP,E,4CAUd,SAASC,GAAW,IACVC,EAAWC,KAAKX,MAAhBU,OACFG,EAAQF,KAAKL,MAAMc,QAAQP,MAEjCH,EAAOW,SAAS,CACdmB,cAAyB,KAAV3B,IACd,WACGJ,GACFA,S,oBAgBN,WAAU,IAAD,SAC8DE,KAAKX,MAAlEb,EADD,EACCA,GAAIJ,EADL,EACKA,UAAWwD,EADhB,EACgBA,MAAOjB,EADvB,EACuBA,MAAOC,EAD9B,EAC8BA,SAAUC,EADxC,EACwCA,UAAWC,EADnD,EACmDA,OAE1D,OACE,sBAAK1C,UAAU,WAAf,UACE,uBACEI,GAAE,UAAKA,EAAL,QACFJ,UAAS,gCAA2ByC,EAAY,kBAAoB,UAA3D,YAAwEzC,GAAwB,IACzG2C,QAASvC,EAHX,SAKGmC,IAEH,+CACEnC,GAAIA,EACJwC,IAAKhB,KAAKL,MACVvB,UAAU,wBACV6C,KAAMzC,EACN0C,UAAQ,EACRE,gBAAc,OACdD,eAAcS,EACdP,KAAK,QACAT,GAAY,CACf,mBAAmB,GAAnB,OAAuBpC,EAAvB,WAVJ,IAYE+C,QAAS,WACP,EAAKb,SAAS,CAAEhB,SAAS,KAE3B8B,OAAQxB,KAAKf,WACbwC,SAAU,kBAAMX,EAAOtC,EAAI,EAAKmB,MAAMc,QAAQP,WAG/C0B,GACC,gEAGDhB,GACC,qBAAKxC,UAAU,OAAf,SACE,mBAAGI,GAAE,UAAKA,EAAL,SAAgBJ,UAAU,gBAA/B,SAAgDwC,a,GAxEpChB,IAAM8B,WCsFfI,E,kDA/Fb,aAAe,IAAD,8BACZ,gBAaFC,SAAW,WACT5C,QAAQC,IAAI,aAfA,EAkBd4C,YAAc,SAACX,GACb,OAAQA,GACN,IAAK,SAEHlC,QAAQC,IAAI,qCACZ,MACF,IAAK,QAEHD,QAAQC,IAAI,uCA1BJ,EAiCd0B,OAAS,SAACtC,EAAI0B,GACZ,EAAKQ,SAAL,eACGlC,EAAK0B,KAnCI,EAuCd+B,aAAe,WAAO,IAAD,EAC2C,EAAKxC,MAA3DyC,EADW,EACXA,SAAUC,EADC,EACDA,SAAUN,EADT,EACSA,cAAe5B,EADxB,EACwBA,eACrCmC,EHJH,SAAuBF,EAAUC,GACtC,MAAoB,UAAbD,GAAqC,cAAbC,EGGVE,CAAcH,EAAUC,GAEvCN,GAAiB5B,EAAeV,OAClC,EAAKyC,YAAY,UACRI,EACT,EAAKJ,YAAY,SAEjB,EAAKD,YAhDK,EAoDdO,aAAe,SAACC,GACdA,EAAEC,iBACF,EAAKL,SAAS1B,QAAQvB,WACtB,EAAKgD,SAASzB,QAAQvB,WACtB,EAAKwB,SAAS,CACZ+B,WAAW,IAEb,EAAKR,gBAxDL,EAAKxC,MAAQ,CACXQ,eAAgB,GAChB4B,eAAe,EACfY,WAAW,GAGb,EAAKC,MAAQ9C,IAAMC,YACnB,EAAKqC,SAAWtC,IAAMC,YACtB,EAAKsC,SAAWvC,IAAMC,YAXV,E,0CA8Dd,WACE,OACE,qBAAKzB,UAAU,oBAAf,SACE,uBACE4C,IAAKhB,KAAK0C,MACVtE,UAAU,oBACVuE,SAAU3C,KAAKsC,aACfM,YAAU,EAJZ,UAME,cAAC,EAAD,CACEpE,GAAG,WACHwC,IAAKhB,KAAKkC,SACVvB,MAAM,WACNiB,MAAO5B,KAAKP,MAAMoC,cAClBf,OAAQd,KAAKc,OACbf,OAAQC,OAEV,cAAC,EAAD,CACExB,GAAG,WACHwC,IAAKhB,KAAKmC,SACVxB,MAAM,WACNC,SAAS,4FACTtB,OAAQU,KAAKP,MAAMQ,eACnBa,OAAQd,KAAKc,OACbf,OAAQC,OAEV,wBAAQqB,KAAK,SAAb,6B,GAzFUzB,IAAM8B,WCgCXmB,MA9Bf,SAAcxD,GAAQ,IACZyD,EAAgBzD,EAAhByD,KAAMC,EAAU1D,EAAV0D,MAcd,OACE,uBACEvE,GAAG,eACHwE,SAAS,KACT5E,UAAU,OACV6E,kBAAgB,aAJlB,UAME,oBAAIzE,GAAG,aAAaJ,UAAU,cAA9B,SACG2E,IAjBY,SAACD,GAClB,OAAOA,GACL,IAAK,QACH,OAAO,cAAC,EAAD,IACT,QACE,OAAO,MAcRI,CAAWJ,OCxBH,SAASK,IACtB,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACE,cAAC,EAAD,CAAMN,KAAK,QAAQC,MAAM,iBCmBpBM,MAlCf,WACE,OACE,sBAAKjF,UAAU,cAAf,UACE,mBAAGA,UAAU,4BAA4BkF,KAAK,gBAA9C,kCAGA,yBAAQlF,UAAU,SAAlB,UACE,qBAAKA,UAAU,kBAAf,SACE,mBAAGkF,KAAK,IAAIlF,UAAU,OAAtB,2BAEF,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,kBAAd,6BACA,qBAAIA,UAAU,YAAd,UACE,oBAAIA,UAAU,YAAd,SACE,mBAAGA,UAAU,YAAYkF,KAAK,IAA9B,uBAEF,oBAAIlF,UAAU,YAAd,SACE,mBAAGA,UAAU,YAAYkF,KAAK,IAA9B,2BAEF,oBAAIlF,UAAU,YAAd,SACE,mBAAGA,UAAU,YAAYkF,KAAK,IAA9B,8BAEF,oBAAIlF,UAAU,YAAd,SACE,mBAAGA,UAAU,YAAYkF,KAAK,IAA9B,qCCVDC,MAVf,WACE,OACE,sBAAKnF,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC+E,EAAD,QCGSK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtF,SAASC,eAAe,SAM1B0E,M","file":"static/js/main.b9d7359e.chunk.js","sourcesContent":["/**\n * Renders Aria-live Regions\n * \n * @TODO - Implement this component using \"The React Way\",\n * with methods, props and state.\n */\n\n function Announce() {\n\n  return (\n    <div>\n      <div\n        role=\"log\"\n        className=\"visually-hidden\"\n        aria-live=\"assertive\"\n        aria-relevant=\"additions\"\n        aria-atomic=\"true\"\n      >\n      </div>\n\n      <div\n        id=\"app-live-polite\"\n        role=\"log\"\n        className=\"visually-hidden\"\n        aria-live=\"polite\"\n        aria-relevant=\"additions\"\n        aria-atomic=\"true\"\n      >\n      </div>\n    </div>\n  )\n}\n\nexport default Announce;\n","/**\n * getPasswordErrors\n * @param {string} value\n * \n * @returns {array}\n */\nexport function getPasswordErrors(value) {\n  const errors = [];\n\n  if (value === '') {\n    errors.push('This field is required');\n    \n    return errors;\n  }\n\n  // Test cases\n  const uppercase = value.match(/[A-Z]/g);\n  const lowercase = value.match(/[a-z]/g);\n  const number = value.match(/[0-9]/g);\n\n  // Must contain 1 capital letter\n  if (!uppercase) {\n    errors.push('Missing uppercase letter');\n  }\n\n  // Must contain 1 lowercase letter\n  if (!lowercase) {\n    errors.push('Missing lowercase letter');\n  }\n\n  // Must contain 1 number\n  if (!number) {\n    errors.push('Must contain a number');\n  }\n\n  return errors;\n}\n\n/**\n * getLoginError\n * @param {string} username\n * @param {password} password\n * \n * @returns {boolean}\n */\nexport function getLoginError(username, password) {\n  return username !== 'level' || password !== 'Access123';\n}\n\n/**\n * announce\n * @param {string} text - Message to announce\n * @param {string} mode - Aria-live politeness\n */\nexport function announce(text, mode) {\n  let liveRegion;\n\n  if (mode === 'assertive') {\n    liveRegion = document.getElementById('app-live-assertive');\n  } else if (mode === 'polite') {\n    liveRegion = document.getElementById('app-live-polite');\n  }\n\n  // Only update live region if the text has changed\n  if (liveRegion && liveRegion.innerText !== text) {\n    liveRegion.innerText = text;\n  }\n}\n","/**\n * Renders a password entry field\n *\n * @property {string} id - Unique machine name\n * @property {string} label - Label text\n * @property {array} errors - Array of validation error messages\n * @property {string} helpText - Instructions for password validation\n * @property {function} update - Update the value of this field\n * @property {string} [className] - Add an additional style class\n * @property {boolean} [hideLabel] - Make a label visually hidden\n * @property {function} validateInline - Password validation before submit\n */\n\nimport React from \"react\";\n\n// helpers\nimport { getPasswordErrors, announce } from \"../../helpers/helpers\";\n\nclass Password extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      touched: false,\n    };\n\n    this.input = React.createRef();\n  }\n\n  validate(callback) {\n    const { parent } = this.props;\n    const value = this.input.current.value;\n\n    const passwordErrors = getPasswordErrors(value);\n    parent.setState({\n      passwordErrors,\n    }, () => {\n      if (callback) {\n        callback();\n      }\n    });\n  };\n\n  handleBlur = () => {\n    const callback = () => {\n      console.log(this.props.errors.length)\n      if (this.props.errors.length) {\n        const text = `Password error: ${this.props.errors.join(\", \")}`;\n        announce(text, \"polite\");\n      } else {\n        announce('', 'polite');\n      }\n    }\n    this.validate(callback);\n  }\n\n  render() {\n    const { id, className, errors, label, helpText, hideLabel, update } = this.props;\n\n    return (\n      <div className=\"password\">\n        <label\n          id={`${id}-lbl`}\n          className={`label password__label ${\n            hideLabel ? \"visually-hidden\" : \"visible\"\n          } ${className ? className : \"\"}`}\n          htmlFor={id}\n        >\n          {label}\n        </label>\n        <input\n          id={id}\n          ref={this.input}\n          className=\"input password__input\"\n          name={id}\n          required\n          aria-invalid={errors.length > 0 ? \"true\" : \"false\"}\n          aria-required=\"true\"\n          type=\"password\"\n          aria-describedby={`${id}-help`}\n          onFocus={() => {\n            this.setState({ touched: true });\n          }}\n          onBlur={this.handleBlur}\n          onChange={() => update(id, this.input.current.value)}\n        />\n        {errors.length > 0 && (\n          <div>{`Error: ${errors.join(\", \")}`}</div>\n        )}\n\n        <div className=\"help\">\n          <p id={`${id}-help`} className=\"help__content\">\n            {helpText}\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Password;\n","/**\n * Renders a username entry field\n *\n * @property {string} id - Unique machine name\n * @property {string} label - Label text\n * @property {boolean} error - Is this required field filled out?\n * @property {function} update - Update the value of this field\n * @property {string} [className] - Add an additional style class\n * @property {string} [helpText] - Instructions and additional context\n * @property {boolean} [hideLabel] - Make a label visually hidden\n */\n\n import React from \"react\";\n\n // helpers\n import { announce } from \"../../helpers/helpers\";\n\n class Username extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      touched: false,\n    };\n\n    this.input = React.createRef();\n  }\n\n  validate(callback) {\n    const { parent } = this.props;\n    const value = this.input.current.value;\n\n    parent.setState({\n      usernameError: value === ''\n    }, () => {\n      if (callback) {\n        callback();\n      }\n    });\n  };\n\n  handleBlur = () => {\n    const callback = () => {\n      if (this.props.error) {\n        announce(\"Username field is required\", \"polite\");\n      } else {\n        announce('', 'polite');\n      }\n    }\n    this.validate(callback);\n  }\n\n  render() {\n    const { id, className, error, label, helpText, hideLabel, update } = this.props;\n\n    return (\n      <div className=\"username\">\n        <label\n          id={`${id}-lbl`}\n          className={`label username__label ${hideLabel ? \"visually-hidden\" : \"visible\"} ${className ? className : \"\"}`}\n          htmlFor={id}\n        >\n          {label}\n        </label>\n        <input\n          id={id}\n          ref={this.input}\n          className=\"input username__input\"\n          name={id}\n          required\n          aria-required=\"true\"\n          aria-invalid={error}\n          type=\"text\"\n          {...(helpText && {\n            \"aria-describedby\": `${id}-help`\n          })}\n          onFocus={() => {\n            this.setState({ touched: true })\n          }}\n          onBlur={this.handleBlur}\n          onChange={() => update(id, this.input.current.value)}\n        />\n\n        {error && (\n          <div>Error: This field is required</div>\n        )}\n  \n        {helpText &&\n          <div className=\"note\">\n            <p id={`${id}-help`} className=\"note__content\">{helpText}</p>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default Username;\n","import React from \"react\";\nimport { getLoginError } from \"../../helpers/helpers\";\n\n// Components\nimport Password from \"../common/Password\";\nimport Username from \"../common/Username\";\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      passwordErrors: [],\n      usernameError: false,\n      submitted: false\n    };\n\n    this.login = React.createRef();\n    this.username = React.createRef();\n    this.password = React.createRef();\n  }\n\n  complete = () => {\n    console.log('SUCCESS!');\n  }\n\n  renderError = (type) => {\n    switch (type) {\n      case \"fields\":\n        // Page error: list fields\n        console.log('Some fields are missing or wrong.')\n        break;\n      case \"login\":\n        // Page error: list fields\n        console.log('You entered the wrong login info.')\n        break;\n      default:\n        break;\n    }\n  }\n\n  update = (id, value) => {\n    this.setState({\n      [id]: value\n    });\n  }\n\n  validateForm = () => {\n    const { username, password, usernameError, passwordErrors } = this.state;\n    const loginError = getLoginError(username, password);\n\n    if (usernameError || passwordErrors.length) {\n      this.renderError(\"fields\");\n    } else if (loginError) {\n      this.renderError(\"login\");\n    } else {\n      this.complete();\n    }\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.password.current.validate();\n    this.username.current.validate();\n    this.setState({\n      submitted: true\n    });\n    this.validateForm();\n  };\n\n  render() {\n    return (\n      <div className=\"panel panel--form\">\n        <form\n          ref={this.login}\n          className=\"form form--center\"\n          onSubmit={this.handleSubmit}\n          noValidate\n        >\n          <Username\n            id=\"username\"\n            ref={this.username}\n            label=\"Username\"\n            error={this.state.usernameError}\n            update={this.update}\n            parent={this}\n          />\n          <Password\n            id=\"password\"\n            ref={this.password}\n            label=\"Password\"\n            helpText=\"Password must include one capital letter, one lower case letter, and at least one number.\"\n            errors={this.state.passwordErrors}\n            update={this.update}\n            parent={this}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","/**\n * Wrapper component for all Views\n * \n * @property {string} view - Machine name for the View component to render\n * @property {string} title - Text of the page's h1\n */\n\nimport Login from \"./Login\";\n\nfunction View(props) {\n  const { view, title } = props;\n\n  /**\n   * Render the different views as children\n   */\n  const renderView = (view) => {\n    switch(view) {\n      case \"login\":\n        return <Login />\n      default:\n        return null;\n    }\n  }\n\n  return (\n    <main\n      id=\"main-content\"\n      tabIndex=\"-1\"\n      className=\"page\"\n      aria-labelledby=\"page-title\"\n    >\n      <h1 id=\"page-title\" className=\"page__title\">\n        {title}\n      </h1>\n      {renderView(view)}\n    </main>\n  );\n}\n\nexport default View;","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n// Components\nimport View from './views/View';\n\nexport default function Routes() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/login\">\n          <View view=\"login\" title=\"Log In\" />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}","function Header() {\n  return (\n    <div className=\"pre-content\">\n      <a className=\"visually-hidden focusable\" href=\"#main-content\">\n        Skip to Main Content\n      </a>\n      <header className=\"header\">\n        <div className=\"header__content\">\n          <a href=\"#\" className=\"home\">Garden Wiki</a>\n        </div>\n        <div className=\"header__content\">\n          <nav className=\"nav\">\n            <h2 className=\"visually-hidden\">Main navigation</h2>\n            <ul className=\"nav__list\">\n              <li className=\"nav__item\">\n                <a className=\"nav__link\" href=\"#\">Almanac</a>\n              </li>\n              <li className=\"nav__item\">\n                <a className=\"nav__link\" href=\"#\">Frost Dates</a>\n              </li>\n              <li className=\"nav__item\">\n                <a className=\"nav__link\" href=\"#\">Find Your Zone</a>\n              </li>\n              <li className=\"nav__item\">\n                <a className=\"nav__link\" href=\"#\">Log In</a>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default Header;\n","import Announce from './common/Announce';\nimport Routes from './Routes';\nimport Header from './ui/Header';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Announce />\n      <Header />\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}